import { Markup, Scenes } from 'telegraf'

export const newOrderScene = new Scenes.WizardScene<Scenes.WizardContext>(
  'new-order',

  // –®–∞–≥ 1 ‚Äî –∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
  async (ctx) => {
    await ctx.reply('üì§ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ 3D –º–æ–¥–µ–ª—å (.stl, .3mf, .obj)')
    return ctx.wizard.next()
  },

  // –®–∞–≥ 2 ‚Äî –≤—ã–±–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª–∞
  async (ctx) => {
    if (ctx.message && 'document' in ctx.message) {
      ;(ctx.wizard.state as any).file = ctx.message.document

      await ctx.reply(
        'üßµ –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª:',
        Markup.inlineKeyboard([
          [Markup.button.callback('PLA', 'mat_pla')],
          [Markup.button.callback('ABS', 'mat_abs')],
        ])
      )
    } else {
      await ctx.reply('‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –º–æ–¥–µ–ª–∏.')
      return
    }

    return ctx.wizard.next()
  },

  // –®–∞–≥ 3 ‚Äî —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª –∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å
  async (ctx) => {
    if (!ctx.callbackQuery) return

    const material = (ctx.callbackQuery as any)?.data.replace('mat_', '')
    ;(ctx.wizard.state as any).material = material

    await ctx.reply(`‚úÖ –ú–æ–¥–µ–ª—å –ø–æ–ª—É—á–µ–Ω–∞.\n–ú–∞—Ç–µ—Ä–∏–∞–ª: ${material.toUpperCase()}`)
    await ctx.scene.leave()
  }
)
